/***********************************************************/
// 다음은 사용자 함수를 호출하는 루틴임 지우지 말것!
/***********************************************************/
#if 01

#include <stdlib.h>
#include "device_driver.h"
#include "2440addr.h"
//#include "myCharacter.c"

// out
#define printf 	Uart_Printf

// colour
#define BLACK	0x0000
#define WHITE	0xfffe
#define BLUE	0x003e
#define GREEN	0x07c0
#define RED		0xf800


typedef struct
{
	int day;
	int year;
	int mon;
	int date;
	int hour;
	int min;
	int sec;
}RTC_TIME;

int RTC_Get_Time(void)
{
	RTC_TIME a;
	/*
	a.day = (int)rBCDDAY;
	a.year = (int)rBCDYEAR;
	a.mon = (int)rBCDMON;
	a.date = (int)rBCDDATE;
	a.hour = (int)rBCDHOUR;
	a.min = (int)rBCDMIN;
	a.sec = (int)rBCDSEC;

	if(!a.sec)
	{
		a.day = (int)rBCDDAY;
		a.year = (int)rBCDYEAR;
		a.mon = (int)rBCDMON;
		a.date = (int)rBCDDATE;
		a.hour = (int)rBCDHOUR;
		a.min = (int)rBCDMIN;
	}

	time->day = a.day;
	time->year = ((a.year >> 4) & 0xf) * 10 + (a.year & 0xf);
	time->mon = ((a.mon >> 4) & 0xf) * 10 + (a.mon & 0xf);
	time->date = ((a.date >> 4) & 0xf) * 10 + (a.date & 0xf);
	time->hour = ((a.hour >> 4) & 0xf) * 10 + (a.hour & 0xf);
	time->min = ((a.min >> 4) & 0xf) * 10 + (a.min & 0xf);
	time->sec = ((a.sec >> 4) & 0xf) * 10 + (a.sec & 0xf);
	*/
	a.hour = (int)rBCDHOUR;
	a.min = (int)rBCDMIN;
	a.sec = (int)rBCDSEC;
	return  ((a.hour >> 4) & 0xf) * 10 + (a.hour & 0xf) * 360 + \
			((a.min >> 4) & 0xf) * 10 + (a.min & 0xf) * 60 + \
			((a.sec >> 4) & 0xf) * 10 + (a.sec & 0xf);

}



void Character_move(void);

void Main(void)
{

	MMU_Init();
	Led_Init();
	Key_Poll_Init();
	Uart_Init(115200);
	Timer0_Init();
	Timer3_Buzzer_Init();
	Timer4_Init();
	Lcd_Graphic_Init();
	Lcd_Clr_Screen(0x0000);

	Uart_Printf("Welcome Zombie Escape Game\n");
	Character_move();


}

#include "./Image/man_01.h"
#include "./Image/man_04.h"

const unsigned short * Man[] = {man_01,man_04};


void Character_move(void)
{

	int i;
	int xtmp, ytmp;

	Uart_Printf("\n그래픽 기본 함수 실습\n");
	Uart_Printf("키보드 누를때마다 다음단계로 진행\n");

	while(!Key_Get_Pressed());
	Uart_Printf("1\n");

	Uart_Printf("Clear Screen\n");
	Lcd_Clr_Screen(BLACK);

	while(!Key_Get_Pressed());
	Uart_Printf("2\n");

	// 캐릭터 불러오기
	Lcd_Get_Info_BMP(&xtmp, &ytmp, man_04);
	Uart_Printf("X=[%d], Y=[%d]\n", xtmp, ytmp);
	Lcd_Draw_BMP((160-(xtmp/2)), (120-(ytmp/2)), man_04);

	for(i=0; i<(sizeof(Man)/sizeof(Man[1])); i++)
	{
		Lcd_Get_Info_BMP(&xtmp, &ytmp, Man[1]); // 그림크기설정
		Uart_Printf("X=[%d], Y=[%d]\n", xtmp, ytmp);
		//Lcd_Draw_BMP((160-(xtmp/2)), (120-(ytmp/2)), Man[1]); // 불러올 위치 설정
		Timer4_Delay(1000);
	}

	Uart_Printf("키보드 누르면 종료\n");
	while(!Key_Get_Pressed());
	Uart_Printf("end\n");
}



#endif


